import './theme.css';
import '@coinbase/onchainkit/styles.css';
import type { Metadata, Viewport } from 'next';
import './globals.css';
import { Providers } from './providers';
//import { AuthKitProvider } from '@farcaster/auth-kit';
//import { TARGET_CHAIN } from '@/constants/contractConfig';


export const viewport: Viewport = {
  width: "device-width",
  initialScale: 1,
};

export async function generateMetadata(): Promise<Metadata> {
  const URL = process.env.NEXT_PUBLIC_URL;
  return {
    title: process.env.NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME,
    description:
      "Generated by `create-onchain --mini`, a Next.js template for MiniKit",
    other: {
      "fc:frame": JSON.stringify({
        version: process.env.NEXT_PUBLIC_VERSION,
        imageUrl: process.env.NEXT_PUBLIC_IMAGE_URL,
        button: {
          title: `Launch ${process.env.NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME}`,
          action: {
            type: "launch_frame",
            name: process.env.NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME,
            url: URL,
            splashImageUrl: process.env.NEXT_PUBLIC_SPLASH_IMAGE_URL,
            splashBackgroundColor: `#${process.env.NEXT_PUBLIC_SPLASH_BACKGROUND_COLOR}`,
          },
        },
      }),
    },
  };
}

// const { chains, publicClient,webSocketPublicClient } = configureChains(  
//   [TARGET_CHAIN],
//   [publicProvider()]
// )

// const config = {
//   rpcUrl: 'https://mainnet.optimism.io', // Or Base mainnet when available
//   domain: 'yourapp.com',                 // Your app's domain
//   siweUri: 'https://yourapp.com/login',  // Your login endpoint (can be a placeholder if not using SIWE)
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className="bg-background">

      <Providers>
          {children}
        </Providers>
  
      {/* <AuthKitProvider config={config}>
      <Providers>
          {children}
        </Providers>
      </AuthKitProvider> */}
      
      </body>
    </html>
  );
}
